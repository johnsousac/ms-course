# definindo nome da aplicacao (isso é muito importante quando mexemos com microservice)
spring.application.name=hr-api-gateway-zuul

# definindo uma porta de maneira aleatória
server.port=8765

# configuração para definir onde está o servidor eureka
# pq os clientes eureka precisam conhecer a localização
# do servidor eureka para poderem se registrar nele
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# temos que realizar a configuração do timeout também no gateway
# pois o padrão do mesmo é de 1 millisegundo
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=20000

# definindo rotas para o zuul realizar o roteamento dos microservices
# após o routes. é o id que identifica o microservice, poderia ser 
# qualquer um mas no nosso caso é "worker"
zuul.routes.worker.service-id=hr-worker

# definindo caminho de acesso ao microservice
# pelo zuul
zuul.routes.worker.path=/hr-worker/**

zuul.routes.payroll.service-id=hr-payroll
zuul.routes.payroll.path=/hr-payroll/**

zuul.routes.user.service-id=hr-user
zuul.routes.user.path=/hr-user/**

zuul.routes.oauth.service-id=hr-oauth
zuul.routes.oauth.path=/hr-oauth/**
